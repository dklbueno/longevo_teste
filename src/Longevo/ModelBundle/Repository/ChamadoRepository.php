<?php

namespace Longevo\ModelBundle\Repository;

/**
 * ChamadoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChamadoRepository extends \Doctrine\ORM\EntityRepository
{
	private function getQueryBuilder()
	{
	    $em = $this->getEntityManager();
	 
	    $queryBuilder = $em->getRepository('LongevoModelBundle:Chamado')
	    ->createQueryBuilder('ch');
	 
	    return $queryBuilder;
	}

	public function findAllInOrder()
	{
	    $qb = $this->getQueryBuilder()
	    ->orderBy('ch.createdAt', 'desc');
	 
	    return $qb->getQuery()->getResult();
	}

	public function findAll()
	{
	    /*$qb = $this->getEntityManager()
        ->createQueryBuilder()
        ->select('cha.id,cha.title,cli.name,cli.email, ped.id AS id_pedido')
        ->from('LongevoModelBundle:Chamado','cha')
        ->join('LongevoModelBundle:Cliente','cli', \Doctrine\ORM\Query\Expr\Join::WITH, 'cli.id = cha.id_cliente')
        ->leftJoin('cli.pedido','ped');  
	    return $qb->getQuery()->getResult();*/
	    $em = $this->getEntityManager();
		$connection = $em->getConnection();
		$statement = $connection->prepare("
			SELECT DISTINCT ON(cha.id) cha.id, cha.title, cli.name, cli.email, ped.id AS id_pedido
			FROM chamado cha
			INNER JOIN cliente cli ON cli.id_cliente = cha.id_cliente
			INNER JOIN pedido ped ON ped.id_cliente = cli.id_cliente
			");
		$statement->execute();
		return $statement->fetchAll();
	}

	public function findFilter($email=null,$id_pedido=null)
	{
		$where = null;
		if($email) $where[] = " cli.email = '".$email."'";
		if($id_pedido) $where[] = " ped.id = ".$id_pedido." ";
		$sql = "
			SELECT DISTINCT ON(cha.id) cha.id, cha.title, cli.name, cli.email, ped.id AS id_pedido
			FROM chamado cha
			INNER JOIN cliente cli ON cli.id_cliente = cha.id_cliente
			INNER JOIN pedido ped ON ped.id_cliente = cli.id_cliente
			";
		if(count($where)){
			$sql.= " WHERE ".implode(" AND ",$where);
		}

	    $em = $this->getEntityManager();
		$connection = $em->getConnection();
		$statement = $connection->prepare($sql);
		$statement->execute();
		return $statement->fetchAll();
	}
}
